name: "release"

on:
  workflow_dispatch:
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            # - platform: macos-14
            args: "--target aarch64-apple-darwin --verbose"
            name: macOS Apple
          - platform: macos-latest
            # - platform: macos-14
            args: "--target x86_64-apple-darwin --verbose"
            name: macOS Intel
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out project
        uses: actions/checkout@v5.0.0
        with:
          repository: doroved/proxer
          token: ${{ secrets.GH_TOKEN_FOR_CHECKOUT }}

      - name: Create temporary certificate files
        run: |
          mkdir -p ./src-tauri/assets/certs
          echo "${{ secrets.ROOT_CA_PEM }}" > ./src-tauri/assets/certs/rootCA.pem
          echo "${{ secrets.CLIENT_CERT_PEM }}" > ./src-tauri/assets/certs/client.pem
          echo "${{ secrets.CLIENT_KEY_PEM }}" > ./src-tauri/assets/certs/client-key.pem

      - name: setup bun
        uses: oven-sh/setup-bun@v2.0.2

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ contains(matrix.platform, 'macos') && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2.8.0
        with:
          workspaces: "./src-tauri -> target"

      - name: install frontend dependencies
        run: bun i

      - uses: tauri-apps/tauri-action@v0.5.22
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{secrets.APPLE_CERTIFICATE}}
          APPLE_CERTIFICATE_PASSWORD: ${{secrets.APPLE_CERTIFICATE_PASSWORD}}
          APPLE_ID: ${{secrets.APPLE_ID}}
          APPLE_PASSWORD: ${{secrets.APPLE_PASSWORD}}
          APPLE_TEAM_ID: ${{secrets.APPLE_TEAM_ID}}
          TAURI_SIGNING_PRIVATE_KEY: ${{secrets.TAURI_SIGNING_PRIVATE_KEY}}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD}}
          CI: false
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install, or go to https://proxer.app to download."
          releaseDraft: true
          prerelease: false
          tauriScript: bun tauri
          args: ${{ matrix.args }}
          repo: proxer-releases
          owner: doroved
          releaseCommitish: main

      - name: Remove temporary certificate files
        if: always()
        run: rm -rf ./src-tauri/assets/certs
